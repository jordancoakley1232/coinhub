{"version":3,"sources":["Components/Navbar/Navbar.js","Components/MarketHighlights/Categories/TopGainer.js","Components/MarketHighlights/Categories/NewListing.js","Components/MarketHighlights/Categories/GetHelp.js","Components/MarketHighlights/Categories/HighestVolume.js","Components/MarketHighlights/Categories/BiggestLoser.js","Components/MarketHighlights/Categories/Random.js","Components/MarketHighlights/MarketHighlights.js","Components/CallToAction/CallToAction.js","Components/ModalComponent/ModalComponent.js","Components/SearchBar/SearchBar.js","Components/AllCoins/AllCoins.js","Pages/Home.js","Components/Gainers/Gainers.js","Pages/GainersPage.js","Components/Losers/Losers.js","Pages/LosersPage.js","App.js","index.js"],"names":["Navbar","className","href","TopGainer","topGainer","src","image","alt","name","style","color","price_change_percentage_24h","toFixed","current_price","NewListing","newListing","getAddedDate","GetHelp","display","flexDirection","alignItems","target","rel","cursor","width","height","background","border","borderRadius","justifyContent","HighestVolume","highestVolume","BiggestLoser","biggestLoser","Random","coins","randomCoin","Math","floor","random","length","MarketHighlights","useState","setCoins","setTopGainer","setNewListing","setHighestVolume","setBiggestLoser","marketAverage","reduce","acc","curr","useEffect","getCoins","catch","error","alert","getTopGainer","getNewListing","getHighestVolume","getBiggestLoser","a","axios","get","res","data","sortedCoins","sort","b","Date","atl_date","total_volume","onClick","date","getMonth","getDate","CallToAction","Modal","setAppElement","ModalComponent","selectedCoin","modalIsOpen","setModalIsOpen","setSelectedCoin","fullCoinInfo","setFullCoinInfo","getFullCoinInfo","str","n","coin","id","req","url","coinURL","links","homepage","isOpen","onRequestClose","description","en","console","log","substr","total_supply","genesis_date","SearchBar","handleChange","search","value","to","onChange","type","placeholder","AllCoins","pageNumber","setPageNumber","filteredCoins","filter","toLowerCase","includes","pagesVisited","pageCount","ceil","displayCoins","slice","map","symbol","toLocaleString","market_cap","marginTop","marginBottom","previousLabel","nextLabel","onPageChange","selected","containerClassName","previousClassName","nextClassName","disabledClassName","activeClassName","Home","setSearch","loading","setLoading","e","Gainers","GainersPage","descendingCoins","Losers","LosersPage","App","path","exact","component","root","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0b5ce89b.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Navbar.scss\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"nav-items\">\r\n                <div className=\"logo\">\r\n                    <h2>CoinHub</h2>\r\n                </div>\r\n                <div className=\"categories\">\r\n                    <div className=\"category\"><a href=\"#\">Prices</a></div>\r\n                    <div className=\"category\"><a href=\"#\">Learn</a></div>\r\n                    <div className=\"category\"><a href=\"#\">Individuals</a></div>\r\n                    <div className=\"category\"><a href=\"#\">Business</a></div>\r\n                    <div className=\"category\"><a href=\"#\">Developers</a></div>\r\n                    <div className=\"category\"><a href=\"#\">Company</a></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst TopGainer = ({ topGainer }) => {\r\n    return (\r\n        <>\r\n            <div className=\"top-gainer grid-item\">\r\n                <h3 className=\"headline\" >Top gainer (24h)</h3>\r\n                <div className=\"info-container\">\r\n                    <img src={topGainer ? topGainer.image : \"\"} alt=\"Crypto\" className=\"coin-icon\"></img>\r\n                    <div className=\"gainer-info coin-info\">\r\n                        <p className=\"coin-name\">{topGainer ? topGainer.name : \"Coin\"}</p>\r\n                        <p className=\"percentage-change\" style={{ color: \"#11D811\" }}>{topGainer ?\r\n                            `+${topGainer.price_change_percentage_24h.toFixed(2)}%` :\r\n                            \"0.00%\"\r\n                        }</p>\r\n                    </div>\r\n                    <h3 className=\"gainer-price\">{topGainer ? `$${topGainer.current_price.toFixed(2)}` : \"$0.00\"}</h3>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopGainer\r\n","import React from 'react'\r\n\r\nconst NewListing = ({ newListing, getAddedDate }) => {\r\n    return (\r\n        <>\r\n            <div className=\"new-listing grid-item\">\r\n                <h3 className=\"headline\">New Listing</h3>\r\n                {/* COIN INFO */}\r\n                <div className=\"info-container\">\r\n                    <img src={newListing ? newListing.image : \"\"} alt=\"Crypto\" className=\"coin-icon\"></img>\r\n                    <div className=\"gainer-info coin-info\">\r\n                        <p className=\"coin-name\">{newListing ? newListing.name : \"Coin\"}</p>\r\n                        <p className=\"date-added\">\r\n                            {newListing ? getAddedDate() : \"DATE\"}\r\n                        </p>\r\n                    </div>\r\n                    <h3 className=\"gainer-price\">{newListing ? `$${newListing.current_price.toFixed(2)}` : \"$0.00\"}</h3>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewListing\r\n","import React from 'react';\r\n\r\nconst GetHelp = () => {\r\n    return (\r\n        <>\r\n            <div className=\"get-help grid-item\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                <h3>Crypto questions, answered</h3>\r\n                <a target='_blank' rel=\"noreferrer\" href=\"https://www.coinbase.com/learn\" style={{ cursor: 'pointer', width: '100px', height: '50px', background: '#1652f0', border: '1px solid #1652f0', borderRadius: '4px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>Get Info</a>\r\n                <p>Learn with Coinbase</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GetHelp\r\n","import React from 'react'\r\n\r\nconst HighestVolume = ({ highestVolume }) => {\r\n    return (\r\n        <>\r\n            <div className=\"highest-volume grid-item second-row\">\r\n                <h3 className=\"headline\">Highest volume (24h)</h3>\r\n                <div className=\"info-container\">\r\n                    <img src={highestVolume ? highestVolume.image : \"\"} alt=\"Crypto\" className=\"coin-icon\"></img>\r\n                    <div className=\"gainer-info coin-info\">\r\n                        <p className=\"coin-name\">{highestVolume ? highestVolume.name : \"Coin\"}</p>\r\n                        <p className=\"percentage-change\">{highestVolume ?\r\n                            `${highestVolume.price_change_percentage_24h.toFixed(2)}%` :\r\n                            \"0.00%\"\r\n                        }</p>\r\n                    </div>\r\n                    <h3 className=\"gainer-price\">{highestVolume ? `$${highestVolume.current_price.toFixed(2)}` : \"$0.00\"}</h3>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HighestVolume\r\n","import React from 'react'\r\n\r\nconst BiggestLoser = ({ biggestLoser }) => {\r\n    return (\r\n        <>\r\n            <div className=\"biggest-loser grid-item second-row\">\r\n                <h3 className=\"headline\">Biggest Loser (24h)</h3>\r\n                {/* COIN INFO */}\r\n                <div className=\"info-container\">\r\n                    <img src={biggestLoser ? biggestLoser.image : \"\"} alt=\"Crypto\" className=\"coin-icon\"></img>\r\n                    <div className=\"gainer-info coin-info\">\r\n                        <p className=\"coin-name\">{biggestLoser ? biggestLoser.name : \"Coin\"}</p>\r\n                        <p className=\"percentage-change\" style={{ color: \"#F00606\" }}>{biggestLoser ?\r\n                            `${biggestLoser.price_change_percentage_24h.toFixed(2)}%` :\r\n                            \"0.00%\"\r\n                        }</p>\r\n                    </div>\r\n                    <h3 className=\"gainer-price\">{biggestLoser ? `$${biggestLoser.current_price.toFixed(2)}` : \"$0.00\"}</h3>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BiggestLoser\r\n","\r\nconst Random = ({ coins }) => {\r\n\r\n    let randomCoin = coins[Math.floor(Math.random() * coins.length - 1)];\r\n\r\n    return (\r\n        <>\r\n            {randomCoin ?\r\n                <div className=\"top-gainer grid-item second-row\">\r\n                    <h3 className=\"headline\" >Coin of the Day</h3>\r\n                    <div className=\"info-container\">\r\n                        <img src={randomCoin ? randomCoin.image : \"\"} alt=\"Crypto\" className=\"coin-icon\"></img>\r\n                        <div className=\"gainer-info coin-info\">\r\n                            <p className=\"coin-name\">{randomCoin ? randomCoin.name : \"Coin\"}</p>\r\n                            {randomCoin.price_change_percentage_24h < 0 ? (\r\n                                <p className=\"coin-percent red\">{randomCoin.price_change_percentage_24h.toFixed(2)}%</p>\r\n                            ) : (<p className=\"coin-percent green\">{randomCoin.price_change_percentage_24h.toFixed(2)}%</p>)\r\n                            }\r\n                        </div>\r\n                        <h3 className=\"gainer-price\">{randomCoin ? `$${randomCoin.current_price.toFixed(2)}` : \"$0.00\"}</h3>\r\n                    </div>\r\n                </div> :\r\n                <p>Getting Coin</p>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n// {\r\n//     coin.price_change_percentage_24h < 0 ? (\r\n//         <p className=\"coin-percent red\">{coin.price_change_percentage_24h.toFixed(2)}%</p>\r\n//     ) : (<p className=\"coin-percent green\">{coin.price_change_percentage_24h.toFixed(2)}%</p>)\r\n// }\r\n\r\nexport default Random","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"./MarketHighlights.scss\";\r\n\r\nimport TopGainer from \"./Categories/TopGainer\";\r\nimport NewListing from \"./Categories/NewListing\";\r\nimport GetHelp from './Categories/GetHelp';\r\nimport HighestVolume from './Categories/HighestVolume';\r\nimport BiggestLoser from './Categories/BiggestLoser';\r\nimport Random from './Categories/Random';\r\n\r\nconst MarketHighlights = () => {\r\n    const [coins, setCoins] = useState([]);\r\n    const [topGainer, setTopGainer] = useState();\r\n    const [newListing, setNewListing] = useState();\r\n    const [highestVolume, setHighestVolume] = useState();\r\n    const [biggestLoser, setBiggestLoser] = useState();\r\n\r\n\r\n    const marketAverage = () => {\r\n        let average = coins.reduce((acc, curr) => {\r\n            return acc + curr.price_change_percentage_24h\r\n        }, 0) / (coins.length - 1);\r\n        return average.toFixed(2);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCoins().catch(error => {\r\n            alert('There was an error fetching data');\r\n        });;\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getTopGainer();\r\n        getNewListing();\r\n        getHighestVolume();\r\n        getBiggestLoser();\r\n\r\n    }, [coins]);\r\n\r\n    // useEffect to set date\r\n    // useEffect(() => {\r\n    //     date = new Date(newListing.atl_date);\r\n    //     console.log(date);\r\n    // }, [newListing])\r\n\r\n    // Fetch Coins from API\r\n    const getCoins = async () => {\r\n        const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\r\n        setCoins(res.data);\r\n    }\r\n\r\n\r\n\r\n    const getTopGainer = () => {\r\n        let sortedCoins = coins.sort((a, b) => a.price_change_percentage_24h - b.price_change_percentage_24h);\r\n        setTopGainer(sortedCoins[sortedCoins.length - 1])\r\n    }\r\n\r\n    const getNewListing = () => {\r\n        let sortedCoins = coins.sort((a, b) => new Date(a.atl_date) - new Date(b.atl_date));\r\n        setNewListing(sortedCoins[sortedCoins.length - 1]);\r\n    }\r\n\r\n    const getAddedDate = () => {\r\n        let date = new Date(newListing.atl_date);\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        return `Added ${months[date.getMonth()]} ${date.getDate()}`;\r\n    };\r\n\r\n    const getHighestVolume = () => {\r\n        let sortedCoins = coins.sort((a, b) => a.total_volume - b.total_volume);\r\n        setHighestVolume(sortedCoins[sortedCoins.length - 1])\r\n    };\r\n\r\n    const getBiggestLoser = () => {\r\n        let sortedCoins = coins.sort((a, b) => b.price_change_percentage_24h - a.price_change_percentage_24h);\r\n        setBiggestLoser(sortedCoins[sortedCoins.length - 1])\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"market-news-container\">\r\n            {marketAverage() > 0 ?\r\n                <h1 className=\"market-text\">The Market is up <span style={{ color: \"#11d811\" }}>{marketAverage()}%</span></h1> :\r\n                <h1 className=\"market-text\">The Market is down <span style={{ color: \"#f00606\" }}>{marketAverage()}%</span></h1>\r\n            }\r\n            {/* <div className=\"market-highlights-container\"> */}\r\n            <div onClick={marketAverage} className=\"headline-grid\">\r\n                <TopGainer topGainer={topGainer} />\r\n                <NewListing newListing={newListing} getAddedDate={getAddedDate} />\r\n                <GetHelp />\r\n                <HighestVolume highestVolume={highestVolume} />\r\n                <BiggestLoser biggestLoser={biggestLoser} />\r\n                <Random coins={coins} />\r\n                {/*                 \r\n                    <div className=\"earn-crypto grid-item second-row\">Earn free crypto</div> */}\r\n            </div>\r\n            {/* </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarketHighlights\r\n","import React from 'react';\r\nimport \"./CallToAction.scss\"\r\n\r\nconst CallToAction = () => {\r\n    return (\r\n        <div className=\"call-to-action\">\r\n            <div className=\"start-earning-container\">\r\n                <div className=\"earning-text\">\r\n                    <h1>Earn up to $31 worth of crypto</h1>\r\n                    <p>Discover how specific cryptocurrencies work - and get a bit of each crypto to try out yourself</p>\r\n                    <a href=\"https://www.coinbase.com/signup\">Start Earning</a>\r\n                    {/* <button>Start Earning</button> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"call-image-container\" >\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CallToAction\r\n","import { useState, useEffect } from 'react';\r\nimport Modal from \"react-modal\";\r\nimport \"./ModalComponent.scss\";\r\nimport axios from \"axios\";\r\nimport { BounceLoader } from \"react-spinners\";\r\n\r\n\r\n// IN MODAL, display \r\n// Current Price, \r\n// 24h change, \r\n// Market Cap\r\n// Volume (24 Hours)\r\n// About Coin Text\r\n// Resources (Official Webiste)\r\n\r\nModal.setAppElement('#root')\r\n// receive selected coin as props;\r\nconst ModalComponent = ({ selectedCoin, modalIsOpen, setModalIsOpen, setSelectedCoin }) => {\r\n    const [fullCoinInfo, setFullCoinInfo] = useState();\r\n\r\n    useEffect(() => {\r\n        if (selectedCoin) {\r\n            getFullCoinInfo(selectedCoin)\r\n        }\r\n    }, [selectedCoin]);\r\n\r\n\r\n    const getFullCoinInfo = async (coin) => {\r\n        const req = await axios.get(`https://api.coingecko.com/api/v3/coins/${coin.id}?tickers=false&market_data=false&developer_data=false&sparkline=false`);\r\n        setFullCoinInfo(req.data);\r\n    }\r\n\r\n    const truncateString = (str, n) => {\r\n        console.log(fullCoinInfo);\r\n        return (str.length > n) ? str.substr(0, n - 1) + \"...(click Buy Now to know more)\" : str;\r\n    }\r\n\r\n    let url = selectedCoin ? `https://www.coinbase.com/price/${selectedCoin.name}` : \"#\";\r\n    let coinURL = fullCoinInfo ? fullCoinInfo.links.homepage[0] : \"#\";\r\n    return (\r\n        <>\r\n            <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\r\n                {selectedCoin && fullCoinInfo ?\r\n                    <div className=\"modal-container\">\r\n                        <div className=\"coin-info-container\">\r\n                            <h1 className=\"coin-name\" ><img src={selectedCoin.image} alt={selectedCoin.name}></img> {selectedCoin.name}</h1>\r\n                            <p className=\"coin-description\">{fullCoinInfo ? truncateString(fullCoinInfo.description.en, 300) : \"No Coin Info\"}</p>\r\n                            <ul className=\"coin-details-list\">\r\n                                <li>Name: {fullCoinInfo.name}</li>\r\n                                <li>Price: ${selectedCoin.current_price}</li>\r\n                                <li>24h Change: <span style={{ color: selectedCoin.price_change_percentage_24h > 0 ? \"green\" : \"red\" }}>{selectedCoin.price_change_percentage_24h.toFixed(2)}%</span></li>\r\n                                <li>Total Supply: <span>{selectedCoin.total_supply}</span></li>\r\n                                <li>Date Created: {fullCoinInfo.genesis_date}</li>\r\n                            </ul>\r\n                            <h3>Learn More about {fullCoinInfo.name}</h3>\r\n                            <p><a target=\"_blank\" rel=\"noreferrer\" href={coinURL}>{coinURL}</a></p>\r\n                        </div>\r\n\r\n                        <div className=\"buy-coin-container\">\r\n                            <h1>Ready to buy {selectedCoin.name}?<img alt={selectedCoin.name} src={selectedCoin.image}></img></h1>\r\n                            <p>Learn more about the largest coin market</p>\r\n                            <a target=\"_blank\" rel=\"noreferrer\" href={url}>Buy Now</a>\r\n                        </div>\r\n                    </div>\r\n                    : <BounceLoader />\r\n                }\r\n\r\n\r\n\r\n                {/* <h1>BitCoin</h1>\r\n                <button onClick={() => setModalIsOpen(false)}>Close Modal</button> */}\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalComponent\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./SearchBar.scss\"\r\n\r\n\r\nconst SearchBar = ({ handleChange, coins, search }) => {\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"coin-filter-container\">\r\n            <div className=\"coin-filter-items\">\r\n                <ul className=\"filter-items\">\r\n                    <li className=\"item\" value=\"all\"><Link to=\"./\">All Assets</Link> </li>\r\n                    <li className=\"item\" value=\"gainers\"><Link to=\"./gainers\">Gainers</Link></li>\r\n                    <li className=\"item\" value=\"losers\"><Link to=\"./losers\">Losers</Link></li>\r\n                </ul>\r\n                <form>\r\n                    <input onChange={handleChange} type=\"text\" className=\"coin-input\" placeholder=\"Search a coin...\"></input>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import { useState } from \"react\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"./AllCoins.scss\";\r\nimport { BounceLoader } from \"react-spinners\";\r\n\r\nconst AllCoins = ({ coins, search, setSelectedCoin, setModalIsOpen }) => {\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n\r\n    const filteredCoins = coins.filter((coin) => {\r\n        return coin.name.toLowerCase().includes(search.toLowerCase());\r\n    })\r\n\r\n    // Paginate Code\r\n    const usersPerPage = 30;\r\n    const pagesVisited = pageNumber * usersPerPage;\r\n    let pageCount = Math.ceil(filteredCoins.length / usersPerPage);\r\n    const displayCoins = filteredCoins.slice(pagesVisited, pagesVisited + usersPerPage)\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    const setModalCoin = (currency) => {\r\n        setSelectedCoin(currency);\r\n        setModalIsOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {displayCoins ?\r\n                displayCoins.map((coin) => {\r\n                    return (\r\n                        <div className=\"coin-container\" key={coin.id}>\r\n                            <div className=\"coin-row\" onClick={() => setModalCoin(coin)}>\r\n                                <div className=\"coin\">\r\n                                    <img src={coin.image} alt=\"Crypto\"></img>\r\n                                    <h1 >{coin.name}</h1>\r\n                                    <p className=\"coin-symbol\">{coin.symbol}</p>\r\n                                </div>\r\n                                <div className=\"coin-data\">\r\n                                    <p className=\"coin-price\">${coin.current_price}</p>\r\n                                    <p className=\"coin-volume\">${coin.total_volume.toLocaleString()}</p>\r\n                                    {coin.price_change_percentage_24h < 0 ? (\r\n                                        <p className=\"coin-percent red\">{coin.price_change_percentage_24h.toFixed(2)}%</p>\r\n                                    ) : (<p className=\"coin-percent green\">{coin.price_change_percentage_24h.toFixed(2)}%</p>)\r\n                                    }\r\n                                    <p className=\"coin-marketcap disappear\">Mkt Cap: ${coin.market_cap.toLocaleString()}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }) :\r\n                <BounceLoader />\r\n            }\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    pageCount={pageCount}\r\n                    onPageChange={changePage}\r\n                    containerClassName={\"paginationBttns\"}\r\n                    previousClassName={\"previousBttn\"}\r\n                    nextClassName={\"nextBttn\"}\r\n                    disabledClassName={\"paginationDisabled\"}\r\n                    activeClassName={\"paginationActive\"}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllCoins\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport ModalComponent from '../Components/ModalComponent/ModalComponent';\r\n\r\n// Components (SearchBar and Coin2);\r\nimport SearchBar from \"../Components/SearchBar/SearchBar\";\r\nimport AllCoins from \"../Components/AllCoins/AllCoins\";\r\n\r\nconst Home = () => {\r\n    const [coins, setCoins] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // Modal State\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [selectedCoin, setSelectedCoin] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        getCoins().catch(error => {\r\n            alert('There was an error fetching data');\r\n        });\r\n        setLoading(true)\r\n    }, []);\r\n\r\n    // Log Selected Coin for Modal\r\n\r\n    const getCoins = async () => {\r\n        const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\r\n        setCoins(res.data);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n        // console.log(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SearchBar handleChange={handleChange} coins={coins} search={search} />\r\n            {loading ? <AllCoins coins={coins} search={search} setSelectedCoin={setSelectedCoin} setModalIsOpen={setModalIsOpen} /> : <BounceLoader />}\r\n            <ModalComponent selectedCoin={selectedCoin} modalIsOpen={modalIsOpen} setModalIsOpen={setModalIsOpen} setSelectedCoin={setSelectedCoin} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { useState } from \"react\";\r\n// import \"./Gainers.scss\";\r\nimport \"../AllCoins/AllCoins.scss\"\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\nconst Gainers = ({ coins, search, setSelectedCoin, setModalIsOpen }) => {\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n\r\n\r\n    const filteredCoins = coins.filter((coin) => {\r\n        return coin.name.toLowerCase().includes(search.toLowerCase());\r\n    })\r\n\r\n    // Paginate Code\r\n    const usersPerPage = 30;\r\n    const pagesVisited = pageNumber * usersPerPage;\r\n    let pageCount = Math.ceil(filteredCoins.length / usersPerPage);\r\n    const displayCoins = filteredCoins.slice(pagesVisited, pagesVisited + usersPerPage)\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    const setModalCoin = (currency) => {\r\n        setSelectedCoin(currency);\r\n        setModalIsOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {displayCoins ?\r\n                displayCoins.map((coin) => {\r\n                    return (\r\n                        <div className=\"coin-container\" key={coin.id}>\r\n\r\n                            <div className=\"coin-row\" onClick={() => setModalCoin(coin)}>\r\n                                <div className=\"coin\">\r\n                                    <img src={coin.image} alt=\"Crypto\"></img>\r\n                                    <h1 >{coin.name}</h1>\r\n                                    <p className=\"coin-symbol\">{coin.symbol}</p>\r\n                                </div>\r\n                                <div className=\"coin-data\">\r\n                                    <p className=\"coin-price\">${coin.current_price}</p>\r\n                                    <p className=\"coin-volume\">${coin.total_volume.toLocaleString()}</p>\r\n                                    {coin.price_change_percentage_24h < 0 ? (\r\n                                        <p className=\"coin-percent red\">{coin.price_change_percentage_24h.toFixed(2)}%</p>\r\n                                    ) : (<p className=\"coin-percent green\">{coin.price_change_percentage_24h.toFixed(2)}%</p>)\r\n                                    }\r\n                                    <p className=\"coin-marketcap\">Mkt Cap: ${coin.market_cap.toLocaleString()}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                }) :\r\n                \"Getting Coin Data\"\r\n            }\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    pageCount={pageCount}\r\n                    onPageChange={changePage}\r\n                    containerClassName={\"paginationBttns\"}\r\n                    previousClassName={\"previousBttn\"}\r\n                    nextClassName={\"nextBttn\"}\r\n                    disabledClassName={\"paginationDisabled\"}\r\n                    activeClassName={\"paginationActive\"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Gainers\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport ModalComponent from \"../Components/ModalComponent/ModalComponent\";\r\n\r\n\r\n// Components (SearchBar and Coin2);\r\nimport SearchBar from \"../Components/SearchBar/SearchBar\";\r\nimport Gainers from \"../Components/Gainers/Gainers\"\r\n\r\n\r\nconst GainersPage = () => {\r\n    const [coins, setCoins] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // Modal State\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [selectedCoin, setSelectedCoin] = useState();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getCoins().catch(error => {\r\n            alert('There was an error fetching data');\r\n        });\r\n        setLoading(true);\r\n\r\n    }, []);\r\n\r\n    const getCoins = async () => {\r\n        const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\r\n        let descendingCoins = res.data.sort((a, b) => {\r\n            return b.price_change_percentage_24h - a.price_change_percentage_24h\r\n        })\r\n        setCoins(descendingCoins);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <SearchBar handleChange={handleChange} coins={coins} search={search} />\r\n            {loading ? <Gainers coins={coins} search={search} setSelectedCoin={setSelectedCoin} setModalIsOpen={setModalIsOpen} handleChange={{ handleChange }} /> : <BounceLoader />}\r\n            <ModalComponent selectedCoin={selectedCoin} modalIsOpen={modalIsOpen} setModalIsOpen={setModalIsOpen} setSelectedCoin={setSelectedCoin} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GainersPage\r\n","import { useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n// import \"./Losers.scss\";\r\nimport \"../AllCoins/AllCoins.scss\"\r\nconst Losers = ({ coins, search, setSelectedCoin, setModalIsOpen }) => {\r\n    const [pageNumber, setPageNumber] = useState(0)\r\n\r\n    const filteredCoins = coins.filter((coin) => {\r\n        return coin.name.toLowerCase().includes(search.toLowerCase());\r\n    })\r\n\r\n    // Paginate Code\r\n    const usersPerPage = 30;\r\n    const pagesVisited = pageNumber * usersPerPage;\r\n    let pageCount = Math.ceil(filteredCoins.length / usersPerPage);\r\n    const displayCoins = filteredCoins.slice(pagesVisited, pagesVisited + usersPerPage)\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    const setModalCoin = (currency) => {\r\n        setSelectedCoin(currency);\r\n        setModalIsOpen(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {displayCoins ?\r\n                displayCoins.map((coin) => {\r\n                    return (\r\n                        <div className=\"coin-container\" key={coin.id}>\r\n\r\n                            <div className=\"coin-row\" onClick={() => setModalCoin(coin)}>\r\n                                <div className=\"coin\">\r\n                                    <img src={coin.image} alt=\"Crypto\"></img>\r\n                                    <h1 >{coin.name}</h1>\r\n                                    <p className=\"coin-symbol\">{coin.symbol}</p>\r\n                                </div>\r\n                                <div className=\"coin-data\">\r\n                                    <p className=\"coin-price\">${coin.current_price}</p>\r\n                                    <p className=\"coin-volume\">${coin.total_volume.toLocaleString()}</p>\r\n                                    {coin.price_change_percentage_24h < 0 ? (\r\n                                        <p className=\"coin-percent red\">{coin.price_change_percentage_24h.toFixed(2)}%</p>\r\n                                    ) : (<p className=\"coin-percent green\">{coin.price_change_percentage_24h.toFixed(2)}%</p>)\r\n                                    }\r\n                                    <p className=\"coin-marketcap\">Mkt Cap: ${coin.market_cap.toLocaleString()}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                }) :\r\n                \"Getting Coin Data\"\r\n            }\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n                <ReactPaginate\r\n                    previousLabel={\"Previous\"}\r\n                    nextLabel={\"Next\"}\r\n                    pageCount={pageCount}\r\n                    onPageChange={changePage}\r\n                    containerClassName={\"paginationBttns\"}\r\n                    previousClassName={\"previousBttn\"}\r\n                    nextClassName={\"nextBttn\"}\r\n                    disabledClassName={\"paginationDisabled\"}\r\n                    activeClassName={\"paginationActive\"}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Losers\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport ModalComponent from \"../Components/ModalComponent/ModalComponent\";\r\n\r\n\r\n// Components (SearchBar and Coin2);\r\nimport SearchBar from \"../Components/SearchBar/SearchBar\";\r\nimport Losers from \"../Components/Losers/Losers\";\r\n\r\n\r\nconst LosersPage = () => {\r\n    const [coins, setCoins] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Modal State\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [selectedCoin, setSelectedCoin] = useState();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getCoins().catch(error => {\r\n            alert('There was an error fetching data');\r\n        });\r\n        setLoading(false)\r\n\r\n    }, []);\r\n\r\n    const getCoins = async () => {\r\n        const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\r\n        let descendingCoins = res.data.sort((a, b) => {\r\n            return a.price_change_percentage_24h - b.price_change_percentage_24h\r\n        })\r\n        setCoins(descendingCoins);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <SearchBar handleChange={handleChange} coins={coins} />\r\n            {loading ?\r\n                <h1>Loading Coins.....</h1> :\r\n                <Losers coins={coins} search={search} setSelectedCoin={setSelectedCoin} setModalIsOpen={setModalIsOpen} />\r\n            }\r\n            <ModalComponent selectedCoin={selectedCoin} modalIsOpen={modalIsOpen} setModalIsOpen={setModalIsOpen} setSelectedCoin={setSelectedCoin} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LosersPage","import { BrowserRouter as Router, HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\nimport \"./App.css\";\r\n\r\n// Constant Render Components\r\nimport NavBar from \"./Components/Navbar/Navbar\";\r\nimport MarketHighlights from \"./Components/MarketHighlights/MarketHighlights\";\r\nimport CallToAction from \"./Components/CallToAction/CallToAction\";\r\n\r\n// Routes for list and Search Bar Render\r\nimport Home from './Pages/Home';\r\nimport GainersPage from \"./Pages/GainersPage\";\r\nimport LosersPage from \"./Pages/LosersPage\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"App\">\r\n                <NavBar />\r\n                <MarketHighlights />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/gainers\" exact component={GainersPage} />\r\n                    <Route path=\"/losers\" exact component={LosersPage} />\r\n                </Switch>\r\n                <CallToAction />\r\n                <ScrollUpButton />\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\n// In each route we need the search bar and list of coins. \r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nlet root = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  root\r\n);\r\n\r\n"],"sourceRoot":""}